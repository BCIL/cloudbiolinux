#! /usr/bin/ruby
#
# Integration testing of BioLinux targets - see 
#
#   ./test/test_vagrant --help
#

# Available testing targets - this could be read from a YAML file.
BOX = { 'Minimal' => 
           { :url => 'http://mathie-vagrant-boxes.s3.amazonaws.com/debian_squeeze_32.box' }
}

print "Integration test script for CloudBioLinux\n"

def run cmd
  print cmd
  system(cmd)
end

if ARGV.index('-h') or ARGV.index('--help')
  print <<USAGE

  Usage:

    test_vagrant [edition] [flavor]

      edition       The target edition (default Minimal)
      flavor        The target flavor (default Minimal)

  Example:

     cd cloudbiolinux/test
     test_vagrant Minimal       # test Minimal edition

  The base install name.box will be pulled over the Internet, unless
  it exist in the local directory.

  Note: this testing framework is under development

  Available targets:

USAGE
  BOX.each do | edition, properties |
    print "* ", edition, " (",properties[:url],")\n"
  end
  exit 0
end

srcpath = File.dirname(File.dirname(__FILE__))

edition_name = ARGV.shift
edition_name = 'Minimal' if !edition_name
flavor_name  = ARGV.shift
flavor_name  = 'Minimal' if !flavor_name

print "Testing edition '#{edition_name}' flavor '#{flavor_name}'\n"
raise "Unknown box for #{edition_name}" if !BOX[edition_name]
remotebox = BOX[edition_name][:url]
localbox = File.basename(remotebox)

# find or install vagrant
print "gem install vagrant" if `which vagrant` !~ /vagrant/

# Name a temporary dir
testname = "biolinux_"+File.basename(localbox,".box")

# Remove old box, if there
run "vagrant box remove #{testname}"

if File.exist?(localbox)
  print "Starting from local #{localbox}\n"
  run "vagrant box add #{testname} #{localbox}"
else
  print "Fetching #{remotebox}\n"
  run "vagrant box add #{testname} #{remotebox}"
end

Dir.mkdir(testname) if !File.directory?(testname)
Dir.chdir(testname) do
  print `ls -l`
  run "vagrant init #{testname}"
  run "vagrant up"
  run "vagrant ssh"
end
