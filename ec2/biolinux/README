Overview
========
Provides a Fabric build file which will install a large selection of
Bioinformatics and machine learning libraries on a bare machine. This is
ideally designed for Amazon EC2, where you start with a bare bones
system. The script can be used to bootstrap from these to a fully ready to go
instance that can be distributed as an AMI for other users.

Fabric quickstart
=================

You must have python-setuptools installed on your local machine in order to
easy_install the latest version of fabric, in ubuntu:

% sudo apt-get install python-setuptools

With fabric installed and a remote ubuntu server on EC2, you run the fabfile to install
all of the libraries with:

% fab -H hostname -i private_key_file install_biolinux

EC2 quickstart
==============
This provides a quick cheat sheet of commands for getting up and running on EC2 using
Amazon's command line tools.

Initial set up
--------------
The first time using EC2, you'll need to install the toolkit and credentials
for connecting. Follow these basic directions:
http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/

Login to Amazon EC2 account (http://aws.amazon.com/account/) and go to
Security Credentials/X.509. Create a new certificate and download the public
cert-*.pem and private pk-*.pem files. Put these in home directory: ~.ec2.

Download and unzip the ec2 api tools, which require java:
http://developer.amazonwebservices.com/connect/entry.jspa?externalID=351&categoryID=88

Set up .zshrc/.bashrc with references to:

export EC2_HOME=$HOME/install/ec2/ec2-api-tools
export EC2_PRIVATE_KEY=~/.ec2/pk-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem
export EC2_CERT=~/.ec2/cert-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem
export PATH=$PATH:$EC2_HOME/bin

To test, you should be able to run the command:

% ec2-describe-regions

Now generate a privatekey for logging in:

% ec2-add-keypair yourmachine-keypair

This will produce an RSA private key. You should copy and paste this to your
.ec2 directory for future use:

% vim ~/.ec2/id-yourmachine.keypair
% chmod 600 ~/.ec2/id-yourmachine.keypair

Allow ssh and web access to your instances:

% ec2-authorize default -p 22
% ec2-authorize default -p 80

Starting an instance
--------------------
Each time you'd like to use EC2, you need to create a remote instance to work
with. These quick start docs follow:
http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/running-an-instance.html

The first step is to pick an AMI to use. For instance:
 
* bioperl-max (http://fortinbras.us/bioperl-max/) -- ami-1ad03273
* unbuntu (http://alestic.com/) -- ami-714ba518
* CloudBioLinux -- ami-879c75ee

Using this AMI, you begin an instance and ensure that it is running:

% ec2-run-instances ami-1ad03273 -k sobchak-keypair
RESERVATION	r-0a7af462	678711657553	default
INSTANCE	i-0ca39764	ami-1ad03273			pending	sobchak-keypair	0		m1.small	2010-01-11T18:56:12+0000	us-east-1b	aki-a71cf9ce	ari-a51cf9cc		monitoring-disabled			instance-store

% ec2-describe-instances i-0ca39764                                                                 1:56PM
RESERVATION	r-0a7af462	678711657553	default
INSTANCE	i-0ca39764	ami-1ad03273	ec2-174-129-68-135.compute-1.amazonaws.com	domU-12-31-39-03-44-11.compute-1.internal	running	sobchak-keypair	0		m1.small	2010-01-11T18:56:12+0000	us-east-1b	aki-a71cf9ce	ari-a51cf9cc		monitoring-disabled	174.129.68.135	10.249.71.223			instance-store

Now you can ssh in using the key you created:

% ssh -i ~/.ec2/id-sobchak.keypair root@ec2-174-129-68-135.compute-1.amazonaws.com

You're in and paying per hour. When done:

% ec2-terminate-instances i-0ca39764

Bundling an AMI on Amazon
-------------------------
EBS
---
http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html
http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/sharingamis-public.html

On your local machine:
% ec2-create-image -n "CloudBioLinux thedate" i-theinstanceid
<gives back AMI ID>

Check on the status of it with:
% ec2-describe-images

When finished, make it public with:

% ec2-modify-image-attribute <ami_id> --launch-permission -a all

Creating EBS stores
-------------------
Create a 150Gb store:

ec2-create-volume -z us-east-1c -s 200
ec2-describe-volumes vol-7568e61c

Attach it to a running instance:

ec2-attach-volume -d /dev/sdh -i i-351d225e vol-7568e61c

Now ssh to the machine and create a filesystem:

grep -q xfs /proc/filesystems || sudo modprobe xf
sudo mkfs.xfs /dev/sdh
sudo mkdir /vol
sudo mkdir /vol/galaxy
sudo mount -t xfs -o noatime /dev/sdh /vol/galaxy/

AMI on EC2
----------
XXX This is incomplete. Use EBS snapshots instead.

http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/creating-an-image.html

From your machine:

% scp -i ~/.ec2/id-sobchak.keypair ~/.ec2/cert-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem ~/.ec2/pk-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem root@ec2-174-129-68-135.compute-1.amazonaws.com:/mnt

On the instance:

# ec2-bundle-vol -d /mnt -k /mnt/pk-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem -c /mnt/cert-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem -u '6787-1165-7553' -r i386 -p sampleimage

EBS instructions for ubuntu: http://alestic.com/2010/01/vmbuilder-ebs-boot-ami

Eucalyptus Public Cloud Quickstart
==================================

XXX Public cloud is giving back XML parsing errors; it may be down.

- Sign up for an account at: https://mayhem9.cs.ucsb.edu:8443/#login

- Image information: https://mayhem9.cs.ucsb.edu:8443/#images
  Ubuntu Jaunty -- emi-AD9013E6

- Download credentials from: https://mayhem9.cs.ucsb.edu:8443/#credentials.
  Move all .pem files to ~/.ec2 directory

- Set environmental variables in your .bashrc/.zshrc:
  export S3_URL=http://128.111.45.118:8773/services/Walrus
  export EC2_URL=http://128.111.45.118:8773/services/Eucalyptus
  export EC2_PRIVATE_KEY=~/.ec2/euca2-chapmanb@50mail.com-7f9e55e6-pk.pem
  export EC2_CERT=~/.ec2/euca2-chapmanb@50mail.com-7f9e55e6-cert.pem
  export EUCALYPTUS_CERT=~/.ec2/cloud-cert.pem
  export EC2_ACCESS_KEY='yourkey'
  export EC2_SECRET_KEY='yourkey'
  export EC2_USER_ID='yourid'

- Follow the starting an instance directions above with euca2ools:

  euca-add-keypair yourmachine-euca-keypair
  euca-run-instances emi-AD9013E6 -k yourmachine-euca-keypair
